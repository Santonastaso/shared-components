{"version":3,"sources":["../src/index.ts","../src/components/ErrorBoundary.tsx","../src/utils/index.ts","../src/components/DataTable.tsx","../src/constants/index.ts","../src/hooks/useErrorHandler.ts"],"sourcesContent":["// Components\nexport * from './components';\n\n// Hooks\nexport * from './hooks';\n\n// Utils\nexport * from './utils';\n\n// Constants\nexport * from './constants';\n","import React from 'react';\n// import { Button } from '@andrea/crm-ui';\nimport { generateId } from '../utils';\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: React.ErrorInfo | null;\n  errorId: string | null;\n  retryCount: number;\n}\n\ninterface ErrorBoundaryProps {\n  children: React.ReactNode;\n  fallback?: (error: Error, errorInfo: React.ErrorInfo, actions: {\n    retry: () => void;\n    reset: () => void;\n    retryCount: number;\n    maxRetries: number;\n  }) => React.ReactNode;\n  onError?: (error: Error, errorInfo: React.ErrorInfo) => void;\n  maxRetries?: number;\n}\n\n/**\n * Unified Error Boundary Component\n * Provides comprehensive error handling for React components across all applications\n */\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: null,\n      retryCount: 0\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): Partial<ErrorBoundaryState> {\n    return {\n      hasError: true,\n      error,\n      errorId: generateId()\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\n    this.setState({\n      errorInfo,\n      errorId: this.state.errorId || generateId()\n    });\n\n    // Call custom error handler if provided\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n\n    // Log to console in development\n    if (process.env.NODE_ENV === 'development') {\n      console.error('ErrorBoundary caught an error:', error, errorInfo);\n    }\n  }\n\n  handleRetry = () => {\n    const maxRetries = this.props.maxRetries || 3;\n    \n    if (this.state.retryCount < maxRetries) {\n      this.setState({\n        hasError: false,\n        error: null,\n        errorInfo: null,\n        errorId: null,\n        retryCount: this.state.retryCount + 1\n      });\n    }\n  };\n\n  handleReset = () => {\n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null,\n      errorId: null,\n      retryCount: 0\n    });\n  };\n\n  handleReportIssue = () => {\n    const subject = encodeURIComponent(`App Error Report - ${this.state.errorId}`);\n    const body = encodeURIComponent(`\nError Report Details:\n- Error ID: ${this.state.errorId}\n- Error: ${this.state.error?.message || 'Unknown error'}\n- URL: ${window.location.href}\n- User Agent: ${navigator.userAgent}\n- Timestamp: ${new Date().toISOString()}\n\nPlease describe what you were doing when this error occurred:\n    `);\n    \n    window.open(`mailto:support@company.com?subject=${subject}&body=${body}`);\n  };\n\n  render() {\n    if (this.state.hasError) {\n      // Custom error UI\n      if (this.props.fallback) {\n        return this.props.fallback(this.state.error!, this.state.errorInfo!, {\n          retry: this.handleRetry,\n          reset: this.handleReset,\n          retryCount: this.state.retryCount,\n          maxRetries: this.props.maxRetries || 3\n        });\n      }\n\n      // Default error UI\n      return (\n        <div className=\"min-h-screen flex items-center justify-center bg-background\">\n          <div className=\"max-w-md w-full bg-card shadow-lg rounded-lg p-6 border\">\n            <div className=\"flex items-center mb-4\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"h-8 w-8 text-destructive text-2xl\">ðŸš¨</div>\n              </div>\n              <div className=\"ml-3\">\n                <h3 className=\"text-lg font-medium text-foreground\">\n                  Something went wrong\n                </h3>\n              </div>\n            </div>\n\n            <div className=\"mb-4\">\n              <p className=\"text-sm text-muted-foreground\">\n                We're sorry, but something unexpected happened. Our team has been notified and is working to fix this issue.\n              </p>\n              \n              {this.state.errorId && (\n                <p className=\"text-xs text-muted-foreground mt-2\">\n                  Error ID: <code className=\"bg-muted px-1 rounded\">{this.state.errorId}</code>\n                </p>\n              )}\n            </div>\n\n            <div className=\"flex space-x-3 mb-4\">\n              {this.state.retryCount < (this.props.maxRetries || 3) && (\n                <button\n                  onClick={this.handleRetry}\n                  className=\"flex-1 bg-blue-600 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  Try Again ({this.state.retryCount + 1}/{(this.props.maxRetries || 3) + 1})\n                </button>\n              )}\n              \n              <button\n                onClick={this.handleReset}\n                className=\"flex-1 bg-gray-600 text-white px-4 py-2 rounded-md text-sm font-medium hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500\"\n              >\n                Reset\n              </button>\n            </div>\n\n            <button\n              onClick={this.handleReportIssue}\n              className=\"w-full bg-gray-100 text-gray-900 px-4 py-2 rounded-md text-sm font-medium hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-gray-500 border border-gray-300\"\n            >\n              ðŸ“§ Report Issue\n            </button>\n\n            {process.env.NODE_ENV === 'development' && this.state.error && (\n              <details className=\"mt-4\">\n                <summary className=\"text-sm text-muted-foreground cursor-pointer hover:text-foreground\">\n                  Technical Details (Development)\n                </summary>\n                <div className=\"mt-2 p-3 bg-muted rounded text-xs font-mono text-foreground overflow-auto max-h-40\">\n                  <div className=\"mb-2\">\n                    <strong>Error:</strong> {this.state.error.message}\n                  </div>\n                  {this.state.errorInfo?.componentStack && (\n                    <div className=\"mb-2\">\n                      <strong>Component Stack:</strong>\n                      <pre className=\"whitespace-pre-wrap text-xs\">\n                        {this.state.errorInfo.componentStack}\n                      </pre>\n                    </div>\n                  )}\n                  {this.state.error.stack && (\n                    <div>\n                      <strong>Stack Trace:</strong>\n                      <pre className=\"whitespace-pre-wrap text-xs\">\n                        {this.state.error.stack}\n                      </pre>\n                    </div>\n                  )}\n                </div>\n              </details>\n            )}\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n/**\n * Higher-order component for error boundary\n */\nexport const withErrorBoundary = <P extends object>(\n  WrappedComponent: React.ComponentType<P>,\n  options: Omit<ErrorBoundaryProps, 'children'> = {}\n) => {\n  return function WithErrorBoundaryComponent(props: P) {\n    return (\n      <ErrorBoundary {...options}>\n        <WrappedComponent {...props} />\n      </ErrorBoundary>\n    );\n  };\n};\n\n/**\n * Hook for error boundary functionality\n */\nexport const useErrorBoundary = () => {\n  const [error, setError] = React.useState<Error | null>(null);\n\n  const resetError = React.useCallback(() => {\n    setError(null);\n  }, []);\n\n  const captureError = React.useCallback((error: Error) => {\n    setError(error);\n  }, []);\n\n  React.useEffect(() => {\n    if (error) {\n      throw error;\n    }\n  }, [error]);\n\n  return { captureError, resetError };\n};\n","import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\n/**\n * Utility function to merge Tailwind CSS classes\n * Combines clsx and tailwind-merge for optimal class handling\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n/**\n * Confirmation utility for user actions\n */\nexport const confirmAction = (message: string): boolean => {\n  return confirm(message);\n}\n\n/**\n * Helper to get nested values via dot notation\n */\nexport const getNested = (obj: any, path: string): any => {\n  if (!obj || !path) return undefined;\n  if (path.indexOf('.') === -1) return obj[path];\n  return path.split('.').reduce((acc, key) => (acc && acc[key] !== undefined ? acc[key] : undefined), obj);\n};\n\n/**\n * Format date for display\n */\nexport const formatDate = (date: string | Date, format: string = 'yyyy-MM-dd'): string => {\n  if (!date) return 'Not set';\n  const d = new Date(date);\n  if (isNaN(d.getTime())) return 'Invalid date';\n  \n  // Simple date formatting - can be enhanced with date-fns if needed\n  const year = d.getFullYear();\n  const month = String(d.getMonth() + 1).padStart(2, '0');\n  const day = String(d.getDate()).padStart(2, '0');\n  \n  return `${year}-${month}-${day}`;\n};\n\n/**\n * Format datetime for display\n */\nexport const formatDateTime = (datetime: string | Date): string => {\n  if (!datetime) return 'Not scheduled';\n  const d = new Date(datetime);\n  if (isNaN(d.getTime())) return 'Invalid datetime';\n  \n  return d.toISOString().replace('T', ' ').replace('.000Z', '');\n};\n\n/**\n * Generate unique ID\n */\nexport const generateId = (): string => {\n  return `ID_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n};\n\n/**\n * Debounce function\n */\nexport const debounce = <T extends (...args: any[]) => any>(\n  func: T,\n  wait: number\n): ((...args: Parameters<T>) => void) => {\n  let timeout: ReturnType<typeof setTimeout>;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n};\n\n/**\n * Throttle function\n */\nexport const throttle = <T extends (...args: any[]) => any>(\n  func: T,\n  limit: number\n): ((...args: Parameters<T>) => void) => {\n  let inThrottle: boolean;\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => inThrottle = false, limit);\n    }\n  };\n};\n","import React, { useState, useMemo } from 'react';\nimport { useReactTable, getCoreRowModel, flexRender, getSortedRowModel, type ColumnDef } from '@tanstack/react-table';\n// Note: These would normally be imported from @andrea/crm-ui\n// For now using placeholder interfaces\ninterface TableProps { children: React.ReactNode; className?: string; }\ninterface ButtonProps { children: React.ReactNode; variant?: string; size?: string; onClick?: () => void; disabled?: boolean; className?: string; }\n\nconst Table = ({ children, className, ...props }: TableProps) => (\n  <table className={`w-full border-collapse border border-gray-200 ${className || ''}`} {...props}>\n    {children}\n  </table>\n);\n\nconst TableHeader = ({ children }: { children: React.ReactNode }) => (\n  <thead className=\"bg-gray-50\">\n    {children}\n  </thead>\n);\n\nconst TableBody = ({ children }: { children: React.ReactNode }) => (\n  <tbody className=\"divide-y divide-gray-200\">\n    {children}\n  </tbody>\n);\n\nconst TableRow = ({ children, onClick, className }: { children: React.ReactNode; onClick?: () => void; className?: string }) => (\n  <tr \n    onClick={onClick} \n    className={`${onClick ? 'cursor-pointer hover:bg-gray-50' : ''} ${className || ''}`}\n  >\n    {children}\n  </tr>\n);\n\nconst TableHead = ({ children }: { children: React.ReactNode }) => (\n  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b border-gray-200\">\n    {children}\n  </th>\n);\n\nconst TableCell = ({ children, colSpan, className }: { children: React.ReactNode; colSpan?: number; className?: string }) => (\n  <td \n    colSpan={colSpan} \n    className={`px-6 py-4 whitespace-nowrap text-sm text-gray-900 border-b border-gray-200 ${className || ''}`}\n  >\n    {children}\n  </td>\n);\n\nconst Button = ({ children, variant = 'default', size = 'default', onClick, disabled, className }: ButtonProps) => {\n  const baseClasses = 'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none';\n  \n  const variantClasses = {\n    default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n    destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n    outline: 'border border-input hover:bg-accent hover:text-accent-foreground',\n    secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n    ghost: 'hover:bg-accent hover:text-accent-foreground',\n    link: 'underline-offset-4 hover:underline text-primary'\n  };\n  \n  const sizeClasses = {\n    default: 'h-10 py-2 px-4',\n    sm: 'h-9 px-3 rounded-md',\n    lg: 'h-11 px-8 rounded-md'\n  };\n  \n  return (\n    <button \n      onClick={onClick} \n      disabled={disabled} \n      className={`${baseClasses} ${variantClasses[variant as keyof typeof variantClasses] || variantClasses.default} ${sizeClasses[size as keyof typeof sizeClasses] || sizeClasses.default} ${className || ''}`}\n    >\n      {children}\n    </button>\n  );\n};\nimport { confirmAction, getNested } from '../utils';\nimport { DATA_TABLE_DEFAULTS } from '../constants';\n\ninterface DataTableProps<T> {\n  data: T[];\n  columns: ColumnDef<T>[];\n  onEditRow?: (row: T) => void;\n  onDeleteRow?: (row: T) => void;\n  onRowClick?: (row: T) => void;\n  enableFiltering?: boolean;\n  filterableColumns?: string[];\n  stickyColumns?: string[];\n  onBulkDelete?: (ids: (string | number)[]) => void;\n  onBulkExport?: (ids: (string | number)[]) => void;\n  initialPageSize?: number;\n  pageSizeOptions?: number[];\n  enableGlobalSearch?: boolean;\n  enableColumnVisibility?: boolean;\n  enableRowSelection?: boolean;\n}\n\n/**\n * Unified DataTable Component\n * Provides consistent data table functionality across all applications\n */\nexport function DataTable<T extends Record<string, any>>({\n  data,\n  columns: userColumns,\n  onEditRow,\n  onDeleteRow,\n  onRowClick,\n  enableFiltering = false,\n  filterableColumns = [],\n  stickyColumns = [],\n  onBulkDelete,\n  onBulkExport,\n  initialPageSize = DATA_TABLE_DEFAULTS.PAGE_SIZE,\n  pageSizeOptions = [...DATA_TABLE_DEFAULTS.PAGE_SIZE_OPTIONS],\n  enableGlobalSearch = true,\n  enableColumnVisibility = false,\n  enableRowSelection = false\n}: DataTableProps<T>) {\n  // State management\n  const [filters, setFilters] = useState<Record<string, string>>({});\n  const [page, setPage] = useState(0);\n  const [pageSize, setPageSize] = useState(initialPageSize);\n  const [selectedIds, setSelectedIds] = useState<Set<string | number>>(new Set());\n  const [globalQuery, setGlobalQuery] = useState('');\n  const [sorting, setSorting] = useState<any[]>([]);\n\n  // Build columns with selection and actions\n  const columns = useMemo(() => {\n    const selectionColumn = enableRowSelection ? {\n      id: 'select',\n      header: ({ table }: any) => {\n        const currentPageRows = table.getRowModel().rows.map((row: any) => row.original);\n        const allSelected = currentPageRows.length > 0 && currentPageRows.every((r: any) => selectedIds.has(r.id));\n        \n        return (\n          <div className=\"w-8\">\n            <input\n              type=\"checkbox\"\n              aria-label=\"Select all\"\n              checked={allSelected}\n              onChange={(e) => {\n                const newSet = new Set(selectedIds);\n                if (e.target.checked) {\n                  currentPageRows.forEach((r: any) => newSet.add(r.id));\n                } else {\n                  currentPageRows.forEach((r: any) => newSet.delete(r.id));\n                }\n                setSelectedIds(newSet);\n              }}\n              className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n            />\n          </div>\n        );\n      },\n      cell: ({ row }: any) => (\n        <div className=\"flex w-8\">\n          <input\n            type=\"checkbox\"\n            aria-label=\"Select row\"\n            checked={selectedIds.has(row.original.id)}\n            onChange={(e) => {\n              const newSet = new Set(selectedIds);\n              if (e.target.checked) {\n                newSet.add(row.original.id);\n              } else {\n                newSet.delete(row.original.id);\n              }\n              setSelectedIds(newSet);\n            }}\n            className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n          />\n        </div>\n      )\n    } : null;\n\n    const actionColumn = (onEditRow || onDeleteRow) ? {\n      id: 'actions',\n      header: 'Actions',\n      cell: ({ row }: any) => (\n        <div className=\"flex gap-2\">\n          {onEditRow && (\n            <Button \n              variant=\"outline\" \n              size=\"sm\" \n              onClick={() => onEditRow(row.original)}\n            >\n              Edit\n            </Button>\n          )}\n          {onDeleteRow && (\n            <Button \n              variant=\"destructive\" \n              size=\"sm\" \n              onClick={() => {\n                if (confirmAction('Are you sure you want to delete this item?')) {\n                  onDeleteRow(row.original);\n                }\n              }}\n            >\n              Delete\n            </Button>\n          )}\n        </div>\n      ),\n    } : null;\n\n    return [selectionColumn, ...userColumns, actionColumn].filter(Boolean) as ColumnDef<T>[];\n  }, [userColumns, onEditRow, onDeleteRow, enableRowSelection, selectedIds]);\n\n  // Apply filters and search\n  const filteredData = useMemo(() => {\n    let result = data;\n\n    // Apply column filters\n    if (enableFiltering && Object.keys(filters).length > 0) {\n      result = result.filter(item => {\n        return Object.entries(filters).every(([column, filterValue]) => {\n          if (!filterValue) return true;\n          const value = getNested(item, column);\n          return String(value).toLowerCase().includes(filterValue.toLowerCase());\n        });\n      });\n    }\n\n    // Apply global search\n    if (enableGlobalSearch && globalQuery) {\n      result = result.filter(item => {\n        return Object.values(item).some(value => \n          String(value).toLowerCase().includes(globalQuery.toLowerCase())\n        );\n      });\n    }\n\n    return result;\n  }, [data, filters, globalQuery, enableFiltering, enableGlobalSearch]);\n\n  // Pagination\n  const paginatedData = useMemo(() => {\n    const start = page * pageSize;\n    const end = start + pageSize;\n    return filteredData.slice(start, end);\n  }, [filteredData, page, pageSize]);\n\n  const totalPages = Math.ceil(filteredData.length / pageSize);\n\n  const table = useReactTable({\n    data: paginatedData,\n    columns,\n    state: { sorting },\n    onSortingChange: setSorting,\n    getCoreRowModel: getCoreRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n  });\n\n  const handleFilterChange = (column: string, value: string) => {\n    setFilters(prev => ({ ...prev, [column]: value }));\n    setPage(0); // Reset to first page when filtering\n  };\n\n  const clearFilters = () => {\n    setFilters({});\n    setGlobalQuery('');\n    setPage(0);\n  };\n\n  return (\n    <div className=\"w-full space-y-4\">\n      {/* Search and Filters */}\n      {(enableGlobalSearch || enableFiltering) && (\n        <div className=\"flex flex-col sm:flex-row gap-4\">\n          {enableGlobalSearch && (\n            <div className=\"flex-1\">\n              <input\n                type=\"text\"\n                placeholder=\"Search all columns...\"\n                value={globalQuery}\n                onChange={(e) => {\n                  setGlobalQuery(e.target.value);\n                  setPage(0);\n                }}\n                className=\"w-full px-3 py-2 border border-input rounded-md bg-background text-foreground placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring\"\n              />\n            </div>\n          )}\n          \n          {enableFiltering && filterableColumns.length > 0 && (\n            <div className=\"flex gap-2\">\n              {filterableColumns.map(column => (\n                <input\n                  key={column}\n                  type=\"text\"\n                  placeholder={`Filter ${column}...`}\n                  value={filters[column] || ''}\n                  onChange={(e) => handleFilterChange(column, e.target.value)}\n                  className=\"px-3 py-2 border border-input rounded-md bg-background text-foreground placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring\"\n                />\n              ))}\n              <Button variant=\"outline\" onClick={clearFilters}>\n                Clear\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Table */}\n      <div className=\"rounded-md border border-gray-200 overflow-hidden shadow-sm\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => (\n                  <TableHead key={header.id}>\n                    {header.isPlaceholder ? null : (\n                      <div\n                        className={header.column.getCanSort() ? 'cursor-pointer select-none flex items-center gap-2' : ''}\n                        onClick={header.column.getToggleSortingHandler()}\n                      >\n                        {flexRender(header.column.columnDef.header, header.getContext())}\n                        {{\n                          asc: ' ðŸ”¼',\n                          desc: ' ðŸ”½',\n                        }[header.column.getIsSorted() as string] ?? null}\n                      </div>\n                    )}\n                  </TableHead>\n                ))}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  onClick={() => onRowClick && onRowClick(row.original)}\n                  className={onRowClick ? 'cursor-pointer hover:bg-muted/50' : ''}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell colSpan={columns.length} className=\"h-24 text-center\">\n                  No results found.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n\n      {/* Pagination */}\n      <div className=\"flex items-center justify-between\">\n        <div className=\"text-sm text-muted-foreground\">\n          Showing {page * pageSize + 1} to {Math.min((page + 1) * pageSize, filteredData.length)} of {filteredData.length} results\n        </div>\n        \n        <div className=\"flex items-center space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => setPage(Math.max(0, page - 1))}\n            disabled={page === 0}\n          >\n            Previous\n          </Button>\n          \n          <span className=\"text-sm\">\n            Page {page + 1} of {totalPages}\n          </span>\n          \n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => setPage(Math.min(totalPages - 1, page + 1))}\n            disabled={page >= totalPages - 1}\n          >\n            Next\n          </Button>\n        </div>\n      </div>\n\n      {/* Bulk Actions */}\n      {selectedIds.size > 0 && (onBulkDelete || onBulkExport) && (\n        <div className=\"flex items-center justify-between p-4 bg-muted rounded-md\">\n          <span className=\"text-sm text-muted-foreground\">\n            {selectedIds.size} items selected\n          </span>\n          <div className=\"flex gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => setSelectedIds(new Set())}\n            >\n              Clear Selection\n            </Button>\n            {onBulkExport && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                onClick={() => onBulkExport(Array.from(selectedIds))}\n              >\n                Export Selected\n              </Button>\n            )}\n            {onBulkDelete && (\n              <Button\n                variant=\"destructive\"\n                size=\"sm\"\n                onClick={() => {\n                  if (confirmAction(`Delete ${selectedIds.size} selected items?`)) {\n                    onBulkDelete(Array.from(selectedIds));\n                    setSelectedIds(new Set());\n                  }\n                }}\n              >\n                Delete Selected\n              </Button>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/**\n * Shared Application Constants\n * Common constants used across multiple applications\n */\n\n// ===== ALERT TYPES =====\nexport const ALERT_TYPES = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  WARNING: 'warning',\n  INFO: 'info'\n} as const;\n\n// ===== CONFIRMATION DIALOG TYPES =====\nexport const CONFIRMATION_TYPES = {\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info'\n} as const;\n\n// ===== TIME CONSTANTS =====\nexport const TIME_CONSTANTS = {\n  MILLISECONDS_PER_SECOND: 1000,\n  SECONDS_PER_MINUTE: 60,\n  MINUTES_PER_HOUR: 60,\n  HOURS_PER_DAY: 24,\n  DAYS_PER_WEEK: 7,\n  DAYS_PER_YEAR: 365,\n  MILLISECONDS_PER_MINUTE: 60 * 1000,\n  MILLISECONDS_PER_HOUR: 60 * 60 * 1000,\n  MILLISECONDS_PER_DAY: 24 * 60 * 60 * 1000\n} as const;\n\n// ===== COMMON VALIDATION MESSAGES =====\nexport const VALIDATION_MESSAGES = {\n  REQUIRED: 'This field is required',\n  INVALID_EMAIL: 'Please enter a valid email address',\n  INVALID_DATE: 'Please enter a valid date',\n  END_DATE_BEFORE_START: 'End date cannot be before start date',\n  END_TIME_BEFORE_START: 'End time must be after start time when dates are the same',\n  QUANTITY_COMPLETED_EXCEEDS_TOTAL: 'Quantity completed cannot exceed total quantity'\n} as const;\n\n// ===== COMMON FIELD CONFIGURATIONS =====\nexport const FIELD_CONFIGS = {\n  // Decimal precision for different field types\n  DECIMAL_PRECISION: {\n    ONE_DECIMAL: ['setup_time', 'changeover_time'],\n    TWO_DECIMAL: ['cost', 'price'],\n    PLAIN_NUMBER: ['speed', 'quantity']\n  },\n  \n  // Field step values\n  FIELD_STEPS: {\n    TIME: 0.1,\n    COST: 0.01,\n    QUANTITY: 1,\n    DIMENSION: 1\n  }\n} as const;\n\n// ===== ERROR TYPES =====\nexport const ERROR_TYPES = {\n  VALIDATION_ERROR: 'VALIDATION_ERROR',\n  NETWORK_ERROR: 'NETWORK_ERROR',\n  SERVER_ERROR: 'SERVER_ERROR',\n  AUTHENTICATION_ERROR: 'AUTHENTICATION_ERROR',\n  AUTHORIZATION_ERROR: 'AUTHORIZATION_ERROR',\n  NOT_FOUND_ERROR: 'NOT_FOUND_ERROR',\n  BUSINESS_LOGIC_ERROR: 'BUSINESS_LOGIC_ERROR',\n  UI_ERROR: 'UI_ERROR',\n  API_ERROR: 'API_ERROR',\n  TIMEOUT_ERROR: 'TIMEOUT_ERROR',\n  PERMISSION_ERROR: 'PERMISSION_ERROR',\n  DUPLICATE_ERROR: 'DUPLICATE_ERROR'\n} as const;\n\n// ===== COMMON STATUSES =====\nexport const COMMON_STATUSES = {\n  ACTIVE: 'ACTIVE',\n  INACTIVE: 'INACTIVE',\n  PENDING: 'PENDING',\n  COMPLETED: 'COMPLETED',\n  CANCELLED: 'CANCELLED',\n  IN_PROGRESS: 'IN_PROGRESS'\n} as const;\n\n// ===== DATA TABLE DEFAULTS =====\nexport const DATA_TABLE_DEFAULTS = {\n  PAGE_SIZE: 10,\n  PAGE_SIZE_OPTIONS: [10, 25, 50, 100],\n  MAX_VISIBLE_PAGES: 5\n} as const;\n\n// ===== DEPARTMENT TYPES =====\nexport const DEPARTMENT_TYPES = {\n  PRINTING: 'STAMPA',\n  PACKAGING: 'CONFEZIONAMENTO'\n} as const;\n\n// ===== WORK CENTERS =====\nexport const WORK_CENTERS = {\n  ZANICA: 'ZANICA',\n  BUSTO_GAROLFO: 'BUSTO_GAROLFO',\n  BOTH: 'BOTH'\n} as const;\n\n// ===== MACHINE STATUSES =====\nexport const MACHINE_STATUSES = {\n  ACTIVE: 'ACTIVE',\n  INACTIVE: 'INACTIVE'\n} as const;\n\n// ===== PRODUCT TYPES =====\nexport const PRODUCT_TYPES = {\n  CREMA: 'CREMA',\n  LIQUIDO: 'LIQUIDO',\n  POLVERI: 'POLVERI'\n} as const;\n\n// ===== SHIFT TYPES =====\nexport const SHIFT_TYPES = {\n  T1: 'T1',\n  T2: 'T2',\n  T3: 'T3'\n} as const;\n\n// ===== SEAL SIDES =====\nexport const SEAL_SIDES = {\n  THREE: 3,\n  FOUR: 4\n} as const;\n\n// ===== TASK STATUSES =====\nexport const TASK_STATUSES = {\n  NOT_SCHEDULED: 'NOT SCHEDULED',\n  SCHEDULED: 'SCHEDULED',\n  IN_PROGRESS: 'IN PROGRESS',\n  COMPLETED: 'COMPLETED',\n  CANCELLED: 'CANCELLED'\n} as const;\n\nexport type AlertType = typeof ALERT_TYPES[keyof typeof ALERT_TYPES];\nexport type ConfirmationType = typeof CONFIRMATION_TYPES[keyof typeof CONFIRMATION_TYPES];\nexport type ErrorType = typeof ERROR_TYPES[keyof typeof ERROR_TYPES];\nexport type CommonStatus = typeof COMMON_STATUSES[keyof typeof COMMON_STATUSES];\nexport type DepartmentType = typeof DEPARTMENT_TYPES[keyof typeof DEPARTMENT_TYPES];\nexport type WorkCenter = typeof WORK_CENTERS[keyof typeof WORK_CENTERS];\nexport type MachineStatus = typeof MACHINE_STATUSES[keyof typeof MACHINE_STATUSES];\nexport type ProductType = typeof PRODUCT_TYPES[keyof typeof PRODUCT_TYPES];\nexport type ShiftType = typeof SHIFT_TYPES[keyof typeof SHIFT_TYPES];\nexport type TaskStatus = typeof TASK_STATUSES[keyof typeof TASK_STATUSES];\n","import { useState, useCallback, useRef } from 'react';\n// Note: These would normally be imported from @andrea/shared-utils\n// For now using placeholder functions\nconst showError = (message: string) => console.error(message);\nconst showWarning = (message: string) => console.warn(message);\nconst showInfo = (message: string) => console.info(message);\nconst showSuccess = (message: string) => console.log(message);\nimport { ERROR_TYPES, type ErrorType } from '../constants';\n\ninterface ErrorHandlerOptions {\n  logErrors?: boolean;\n  showUserMessages?: boolean;\n  maxRetries?: number;\n  retryDelay?: number;\n  onError?: (error: any, context: string) => void;\n  onRetry?: (error: any, attempt: number, delay: number) => void;\n  onFallback?: (error: any) => void;\n}\n\ninterface AsyncErrorOptions extends ErrorHandlerOptions {\n  context?: string;\n  fallbackMessage?: string;\n  retry?: boolean;\n}\n\n/**\n * Unified Error Handling Hook\n * Provides comprehensive error handling capabilities for React components\n */\nexport const useErrorHandler = (options: ErrorHandlerOptions = {}) => {\n  const {\n    logErrors = true,\n    showUserMessages = true,\n    maxRetries = 3,\n    retryDelay = 1000,\n    onError = null,\n    onRetry = null,\n    onFallback = null\n  } = options;\n\n  const [errors, setErrors] = useState<any[]>([]);\n  const [isRetrying, setIsRetrying] = useState(false);\n  const retryCountRef = useRef(0);\n\n  /**\n   * Handle error with comprehensive error management\n   */\n  const handleError = useCallback(async (error: any, context = '', customOptions: any = {}) => {\n    // Create normalized error object\n    const normalizedError = {\n      id: `ERR_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n      message: error.message || 'An unexpected error occurred',\n      type: error.type || ERROR_TYPES.SERVER_ERROR,\n      severity: error.severity || 'medium',\n      context,\n      timestamp: new Date().toISOString(),\n      userMessage: error.userMessage || error.message || 'An unexpected error occurred'\n    };\n\n    // Add to errors state\n    setErrors(prev => [...prev, normalizedError]);\n\n    // Log error if enabled\n    if (logErrors) {\n      console.error(`[${context}] Error:`, error);\n    }\n\n    // Show user message if enabled\n    if (showUserMessages) {\n      const message = normalizedError.userMessage;\n      \n      switch (normalizedError.severity) {\n        case 'low':\n          showWarning(message);\n          break;\n        case 'medium':\n          showError(message);\n          break;\n        case 'high':\n        case 'critical':\n          showError(message);\n          break;\n        default:\n          showError(message);\n      }\n    }\n\n    // Call custom error handler if provided\n    if (onError) {\n      await onError(normalizedError, context);\n    }\n\n    return normalizedError;\n  }, [logErrors, showUserMessages, onError]);\n\n  /**\n   * Handle async operations with automatic retry\n   */\n  const handleAsync = useCallback(async (\n    asyncOperation: () => Promise<any>, \n    options: AsyncErrorOptions = {}\n  ) => {\n    const {\n      context = '',\n      fallbackMessage = 'Operation failed',\n      retry = false,\n      maxRetries: customMaxRetries = maxRetries\n    } = options;\n\n    try {\n      if (retry) {\n        return await retryOperation(asyncOperation, customMaxRetries);\n      }\n      return await asyncOperation();\n    } catch (error) {\n      const handledError = await handleError(error, context, { fallbackMessage });\n      throw handledError;\n    }\n  }, [maxRetries, handleError]);\n\n  /**\n   * Retry operation with exponential backoff\n   */\n  const retryOperation = useCallback(async (\n    operation: () => Promise<any>,\n    maxAttempts: number\n  ) => {\n    let lastError: any;\n    \n    for (let attempt = 1; attempt <= maxAttempts; attempt++) {\n      try {\n        setIsRetrying(attempt > 1);\n        retryCountRef.current = attempt - 1;\n        \n        const result = await operation();\n        setIsRetrying(false);\n        retryCountRef.current = 0;\n        return result;\n      } catch (error) {\n        lastError = error;\n        \n        if (attempt < maxAttempts) {\n          const delay = retryDelay * Math.pow(2, attempt - 1); // Exponential backoff\n          \n          if (onRetry) {\n            await onRetry(error, attempt, delay);\n          }\n          \n          if (showUserMessages) {\n            showInfo(`Retrying... (${attempt}/${maxAttempts})`);\n          }\n          \n          await new Promise(resolve => setTimeout(resolve, delay));\n        }\n      }\n    }\n    \n    setIsRetrying(false);\n    retryCountRef.current = 0;\n    throw lastError;\n  }, [retryDelay, onRetry, showUserMessages]);\n\n  /**\n   * Handle specific error types\n   */\n  const handleValidationError = useCallback((message: string, details: any = {}) => {\n    const error = {\n      message,\n      type: ERROR_TYPES.VALIDATION_ERROR,\n      severity: 'medium',\n      details,\n      userMessage: message\n    };\n    return handleError(error, 'validation');\n  }, [handleError]);\n\n  const handleNetworkError = useCallback((message = 'Network connection failed') => {\n    const error = {\n      message,\n      type: ERROR_TYPES.NETWORK_ERROR,\n      severity: 'high',\n      userMessage: message\n    };\n    return handleError(error, 'network');\n  }, [handleError]);\n\n  const handleAuthError = useCallback((message = 'Authentication failed') => {\n    const error = {\n      message,\n      type: ERROR_TYPES.AUTHENTICATION_ERROR,\n      severity: 'high',\n      userMessage: message\n    };\n    return handleError(error, 'authentication');\n  }, [handleError]);\n\n  /**\n   * Clear all errors\n   */\n  const clearErrors = useCallback(() => {\n    setErrors([]);\n  }, []);\n\n  /**\n   * Clear specific error by ID\n   */\n  const clearError = useCallback((errorId: string) => {\n    setErrors(prev => prev.filter(error => error.id !== errorId));\n  }, []);\n\n  /**\n   * Get errors by type\n   */\n  const getErrorsByType = useCallback((type: ErrorType) => {\n    return errors.filter(error => error.type === type);\n  }, [errors]);\n\n  /**\n   * Check if there are any critical errors\n   */\n  const hasCriticalErrors = useCallback(() => {\n    return errors.some(error => error.severity === 'critical');\n  }, [errors]);\n\n  return {\n    // Error handling functions\n    handleError,\n    handleAsync,\n    handleValidationError,\n    handleNetworkError,\n    handleAuthError,\n    \n    // Error management\n    clearErrors,\n    clearError,\n    getErrorsByType,\n    hasCriticalErrors,\n    \n    // State\n    errors,\n    isRetrying,\n    retryCount: retryCountRef.current,\n    \n    // Utilities\n    retryOperation\n  };\n};\n\n/**\n * Hook for handling form validation errors\n */\nexport const useValidationErrorHandler = () => {\n  const { handleValidationError, clearErrors } = useErrorHandler({\n    showUserMessages: false // Don't show toast for validation errors\n  });\n\n  const handleFieldError = useCallback((field: string, message: string) => {\n    return handleValidationError(`Field '${field}': ${message}`, { field });\n  }, [handleValidationError]);\n\n  const handleRequiredFieldError = useCallback((field: string) => {\n    return handleValidationError(`Field '${field}' is required`, { field, type: 'required' });\n  }, [handleValidationError]);\n\n  return {\n    handleFieldError,\n    handleRequiredFieldError,\n    clearErrors\n  };\n};\n"],"mappings":"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","names":["React","error","import_react","import_jsx_runtime","table","import_react","options"]}